{"version":3,"sources":["store/global-store.js","actions/counter.js","actions/github.js","store/index.js","components/Counters.js","components/SearchForm.js","components/Repos.js","index.js"],"names":["setState","store","newState","afterUpdateCallback","state","listeners","forEach","listener","run","useCustom","React","mapState","mapActions","useState","Object","create","originalHook","actions","useMemo","useEffect","newListener","oldState","mappedState","push","filter","useStore","initialState","initializer","bind","associateActions","associatedActions","keys","key","addRequest","newCounters","counters","requests","addSuccess","success","addFail","fail","getReposByUsername","username","a","request","axios","counter","status","get","response","repos","data","isReposEmpty","length","isError404","useGlobal","useGlobalHook","Counters","globalState","className","Counter","globalActions","onSubmit","e","preventDefault","target","value","github","name","placeholder","autoComplete","type","Repos","map","repo","id","href","html_url","rel","mapRepos","App","SearchForm","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.640bc187.chunk.js","sourcesContent":["function setState(store, newState, afterUpdateCallback) {\n  store.state = { ...store.state, ...newState };\n  store.listeners.forEach((listener) => {\n    listener.run(store.state);\n  });\n  afterUpdateCallback && afterUpdateCallback();\n}\n\nfunction useCustom(store, React, mapState, mapActions) {\n  const [, originalHook] = React.useState(Object.create(null));\n  const state = mapState ? mapState(store.state) : store.state;\n  const actions = React.useMemo(\n    () => (mapActions ? mapActions(store.actions) : store.actions),\n    [mapActions, store.actions]\n  );\n\n  React.useEffect(() => {\n    const newListener = { oldState: {} };\n    newListener.run = mapState\n      ? newState => {\n          const mappedState = mapState(newState);\n          if (mappedState !== newListener.oldState) {\n            newListener.oldState = mappedState;\n            originalHook(mappedState);\n          }\n        }\n      : originalHook;\n    store.listeners.push(newListener);\n    newListener.run(store.state);\n    return () => {\n      store.listeners = store.listeners.filter(\n        listener => listener !== newListener\n      );\n    };\n  }, []); // eslint-disable-line\n  return [state, actions];\n}\n\nfunction associateActions(store, actions) {\n  const associatedActions = {};\n  Object.keys(actions).forEach(key => {\n    if (typeof actions[key] === \"function\") {\n      associatedActions[key] = actions[key].bind(null, store);\n    }\n    if (typeof actions[key] === \"object\") {\n      associatedActions[key] = associateActions(store, actions[key]);\n    }\n  });\n  return associatedActions;\n}\n\nconst useStore = (React, initialState, actions, initializer) => {\n  const store = { state: initialState, listeners: [] };\n  store.setState = setState.bind(null, store);\n  store.actions = associateActions(store, actions);\n  if (initializer) initializer(store);\n  return useCustom.bind(null, store, React);\n};\n\nexport default useStore;\n","export const addRequest = store => {\n  const newCounters = { ...store.state.counters };\n  newCounters.requests++;\n  store.setState({ counters: newCounters });\n};\n\nexport const addSuccess = store => {\n  const newCounters = { ...store.state.counters };\n  newCounters.success++;\n  store.setState({ counters: newCounters });\n};\n\nexport const addFail = store => {\n  const newCounters = { ...store.state.counters };\n  newCounters.fail++;\n  store.setState({ counters: newCounters });\n};\n","import axios from \"axios\";\n\nexport const getReposByUsername = async (store, username, request = axios) => {\n  store.actions.counter.addRequest();\n  const status = \"LOADING\";\n  store.setState({ status });\n  try {\n    const response = await request.get(\n      `https://api.github.com/users/${username}/repos`\n    );\n    const repos = response.data;\n    const isReposEmpty = repos.length == 0;\n    const status = isReposEmpty ? \"EMPTY\" : \"SUCCESS\";\n    store.setState({ repos, status });\n    store.actions.counter.addSuccess();\n  } catch (error) {\n    const isError404 = error.response && error.response.status === 404;\n    const status = isError404 ? \"NOT_FOUND\" : \"ERROR\";\n    store.setState({ status });\n    store.actions.counter.addFail();\n  }\n};\n","import React from \"react\";\nimport useGlobalHook from \"./global-store\";\n\nimport * as actions from \"../actions\";\n\nconst initialState = {\n  counters: {\n    requests: 0,\n    success: 0,\n    fail: 0\n  },\n  status: \"INITIAL\",\n  repos: []\n};\n\nconst useGlobal = useGlobalHook(React, initialState, actions);\n\nexport default useGlobal;\n","import React from \"react\";\n\nimport useGlobal from \"../store\";\n\nconst Counters = () => {\n  const [globalState, globalActions] = useGlobal();\n  const { requests, success, fail } = globalState.counters;\n  return (\n    <p>\n      {requests} Requests <br />{\" \"}\n      <span className=\"success\">{success} Success</span> and{\" \"}\n      <span className=\"fail\">{fail} Fails</span>\n    </p>\n  );\n};\n\nexport default Counters;\n","import React from \"react\";\n\nimport useGlobal from \"../store\";\n\nconst Counter = () => {\n  const [globalState, globalActions] = useGlobal();\n  const searchSubmit = e => {\n    e.preventDefault();\n    const username = e.target.username.value;\n    globalActions.github.getReposByUsername(username);\n  };\n  return (\n    <form onSubmit={searchSubmit}>\n      <input name=\"username\" placeholder=\"username\" autoComplete=\"off\"/>\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default Counter;\n","import React from \"react\";\n\nimport useGlobal from \"../store\";\n\nconst mapRepos = repos => {\n  return repos.map(repo => (\n    <a\n      key={repo.id}\n      href={repo.html_url}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <h3>{repo.name}</h3>\n    </a>\n  ));\n};\n\nconst Repos = () => {\n  const [globalState, globalActions] = useGlobal();\n  const { status, repos } = globalState;\n  return (\n    <>\n      {status === \"LOADING\" && <h4>Loading...</h4>}\n      {status === \"SUCCESS\" && mapRepos(repos)}\n      {status === \"EMPTY\" && <h4>This user have zero repos</h4>}\n      {status === \"NOT_FOUND\" && <h4>404 - User not found</h4>}\n      {status === \"ERROR\" && <h4>Connection Error</h4>}\n    </>\n  );\n};\n\nexport default Repos;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport Counters from \"./components/Counters\";\nimport SearchForm from \"./components/SearchForm\";\nimport Repos from \"./components/Repos\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Search GitHub Repos</h1>\n      <SearchForm />\n      <Counters />\n      <Repos />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}